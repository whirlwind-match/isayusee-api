

#liquibase.drop-first=true

#spring.jpa.show-sql=true
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=trace
logging.level.org.springframework.security.oauth2=DEBUG

#https://stackoverflow.com/questions/29510759/how-to-test-spring-security-oauth2-resource-server-security/31434559#31434559

# Not needed yet
#security.oauth2.resource.client-id=
#security.oauth2.resource.client-secret=

# If not using JWTs then we can instead get user-info this way
security.oauth2.resource.user-info-uri=https://isayusee.eu.auth0.com/userinfo

# For JWTs without need to connect from API to back end
# security.oauth2.resource.jwk.key-set-uri=https://isayusee.eu.auth0.com/.well-known/jwks.json

# shared key
# SECURITY_OAUTH2_RESOURCE_JWT_KEY-VALUE
#security.oauth2.resource.jwt.key-value=sadf*sdfsdfsadasfdasfdasd_or_moreSecure:)

security.oauth2.resource

# For creating users
auth0.domain=https://isayusee.eu.auth0.com/
auth0.mgmt.client-id=x
auth0.mgmt.client-secret=x
auth0.mgmt.connection-name=username-password
security.oauth2.resource.id=xx